{
  "name": "raw-stacktrace",
  "description": "Emit and/or format raw stacktraces when errors are thrown",
  "keywords": [
    "stacktrace",
    "trace",
    "callsite",
    "callsites"
  ],
  "version": "1.0.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/jb55/node-raw-stacktrace.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "dependencies": {
    "traceback": ">=0.3.0 && <0.4.0"
  },
  "devDependencies": {
    "mocha": "*",
    "better-assert": "*"
  },
  "readme": "\n# node-raw-stacktraces\n\nGet raw stack traces when errors are thrown.\n\nOptionally customize the format of stack traces.\n\n[![Build Status](https://travis-ci.org/jb55/node-raw-stacktrace.png)](https://travis-ci.org/jb55/node-raw-stacktrace)\n\n## How it works\n\nnode-raw-stacktrace works by hooking into v8's prepareStackTrace call. v8 calls\nthis function when code accesses the Error.stack property to render it to a\nstring.\n\nThis means that Error.stack needs to be accessed or events will not be emitted.\nUsually this is not an issue if it gets logged to a file or stdout, but it's\nsomething to keep in mind.\n\n## methods\n\n```js\nvar raw = require('raw-stacktrace');\n```\n\n### var traces = raw(opts={})\n\nReturn an `EventEmitter` that emits an array of either raw or formatted\nCallSites. You can read about v8's [CallSite API here](http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi#Customizing_stack_traces)\n\n`opts` may contain:\n\n* `rawCallSites`: `true` if you just want the raw array of callsites,\n  defaults to `false`. When `false`, the callsites are formatted to objects.\n\n* `formatter`: \\[optional\\] a `function(err, callsites)` that formats stack\n  traces, usually returns a string but it doesn't have to.\n\n## Example\n\n```js\nvar raw = require('raw-stacktrace');\nvar traces = raw();\n\ntraces.on(\"trace\", function(err, callsites){\n  console.log(callsites[0]);\n});\n\ntraces.formatter(function(err, callsites){\n  return \"custom stack trace output\";\n});\n\n(function testError(){ \n  throw new Error(\"test\");\n}).bind({ context: \"someContext\" })();\n```\n\n### Output\n\n```js\n{ this: { context: 'someContext' },\n  type: 'Object',\n  isTop: false,\n  isEval: false,\n  origin: '/Users/jb55/src/js/node-raw-stacktrace/example.js',\n  script: '/Users/jb55/src/js/node-raw-stacktrace/example.js',\n  fun: [Function: testError],\n  name: 'testError',\n  method: null,\n  path: '/Users/jb55/src/js/node-raw-stacktrace/example.js',\n  line: 11,\n  col: 9,\n  isNative: false,\n  pos: 277,\n  isCtor: false,\n  file: 'example.js',\n  toJSON: [Function: toJSON] }\ncustom stack trace output\n```\n\n## Adding callsites to the Error object\n\n```js\nvar raw = require('raw-stacktrace');\nvar traces = raw();\n\ntraces.on(\"trace\", function(err, callsites){\n  err.callsites = callsites;\n});\n```\n\n### License\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2013 William Casarin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/jb55/node-raw-stacktrace/issues"
  },
  "_id": "raw-stacktrace@1.0.3",
  "_from": "raw-stacktrace@^1.0.0"
}
